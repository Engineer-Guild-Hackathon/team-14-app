import { Router } from 'express';
import { TeacherController } from '../controllers/teacher.controller';
import { authMiddleware } from '../middleware/auth.middleware';

const router = Router();
const teacherController = new TeacherController();

// 教師・メンター専用ルート - JWT認証必須
router.use(authMiddleware);

// 認証 (/auth)
router.post('/login', teacherController.login.bind(teacherController));

// 生徒管理 (/students)
router.get('/students', teacherController.getStudents.bind(teacherController));
router.post('/students', teacherController.createStudent.bind(teacherController));
router.get('/students/:studentId', teacherController.getStudent.bind(teacherController));
router.put('/students/:studentId', teacherController.updateStudent.bind(teacherController));
router.delete('/students/:studentId', teacherController.deleteStudent.bind(teacherController));

// グループ管理 (/groups)
router.get('/groups', teacherController.getGroups.bind(teacherController));
router.post('/groups', teacherController.createGroup.bind(teacherController));
router.put('/groups/:groupId', teacherController.updateGroup.bind(teacherController));
router.post('/groups/:groupId/students', teacherController.addStudentToGroup.bind(teacherController));

// 進捗・学習プロセス (/progress)
router.get('/students/:studentId/quests', teacherController.getStudentQuests.bind(teacherController));
router.get('/students/:studentId/logs', teacherController.getStudentLogs.bind(teacherController));

// ダッシュボード
router.get('/dashboard/alerts', teacherController.getStuckStudents.bind(teacherController));
router.get('/dashboard/activity', teacherController.getRecentActivity.bind(teacherController));

// クエスト管理
router.get('/quests', teacherController.getQuests.bind(teacherController));
router.post('/assignments', teacherController.assignQuest.bind(teacherController));

export { router as teacherRoutes };